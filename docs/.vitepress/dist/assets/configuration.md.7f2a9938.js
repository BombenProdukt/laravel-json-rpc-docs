import{_ as s,o as a,c as e,V as n}from"./chunks/framework.d3b95951.js";const u=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"configuration.md","filePath":"configuration.md"}'),o={name:"configuration.md"},p=n(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>You may publish the configuration file using the following command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">artisan</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">vendor:publish</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--tag=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">laravel-json-rpc-config</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="json-rpc-server-namespace" tabindex="-1">JSON-RPC Server Namespace <a class="header-anchor" href="#json-rpc-server-namespace" aria-label="Permalink to &quot;JSON-RPC Server Namespace&quot;">​</a></h2><p>This value sets the namespace for the JsonRpc part of your application. This is used whenever a JSON-RPC server class is referenced within the application.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">namespace_server</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">App</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">Http</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">Server</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span></code></pre></div><h2 id="json-rpc-servers" tabindex="-1">JSON-RPC Servers <a class="header-anchor" href="#json-rpc-servers" aria-label="Permalink to &quot;JSON-RPC Servers&quot;">​</a></h2><p>Here you may define a list of servers for your application. Each server is represented by its fully qualified class name.</p><p>This value determines where all the JSON-RPC server classes are stored. These classes are used to handle incoming JSON-RPC requests and are automatically registered with the application.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">servers</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// \\App\\Http\\Server\\Server::class,</span></span>
<span class="line"><span style="color:#89DDFF;">],</span></span></code></pre></div>`,10),l=[p];function t(r,c,i,h,d,y){return a(),e("div",null,l)}const C=s(o,[["render",t]]);export{u as __pageData,C as default};
